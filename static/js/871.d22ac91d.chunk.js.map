{"version":3,"file":"static/js/871.d22ac91d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/Cast/Cast.styled.js","pages/Reviews/Reviews.jsx","pages/Reviews/Reviews.styled.js","service/ApiServiceFetch.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\n\nexport const Loader = () => {\n  return <p>Loading...</p>;\n};\n","import styled from 'styled-components';\n\nexport const TextMovies = styled.h2`\n  margin-top: 25px;\n  text-align: center;\n  font-size: 30px;\n`;\n","import { fetchMoviesReviews } from '../../service/ApiServiceFetch';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { TextMovies } from 'pages/Cast/Cast.styled';\nimport {\n  BoxWrapper,\n  ImgAuthor,\n  ItemReview,\n  TitleAuthor,\n} from './Reviews.styled';\nfunction Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchMoviesReviews(movieId);\n        setReviews(response.results);\n        console.log('response :>> ', response);\n      } catch (error) {\n        console.log('error :>> ', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n  console.log('reviews :>> ', reviews);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews?.length ? (\n        <section>\n          <div>\n            <TextMovies>Reviews about the film</TextMovies>\n            <BoxWrapper>\n              <ul>\n                {reviews.map(\n                  ({\n                    id,\n                    author_details: { avatar_path },\n                    author,\n                    content,\n                  }) => {\n                    let imgSrc;\n                    if (avatar_path) {\n                      imgSrc = avatar_path.match(/^(\\/http|\\/https)/)\n                        ? `${avatar_path.slice(1, -1)}`\n                        : `https://www.gravatar.com/avatar/${avatar_path}`;\n                    } else {\n                      imgSrc = `https://via.placeholder.com/82x82`;\n                    }\n\n                    return (\n                      <ItemReview key={id}>\n                        <ImgAuthor src={imgSrc} alt={author} />\n                        <TitleAuthor>Author: {author}</TitleAuthor>\n                        <p>{content}</p>\n                      </ItemReview>\n                    );\n                  }\n                )}\n              </ul>\n            </BoxWrapper>\n          </div>\n        </section>\n      ) : (\n        <div>\n          <p>Unfortunately there are no rewiews yet</p>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const BoxWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n`;\nexport const ItemReview = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n`;\nexport const ImgAuthor = styled.img`\n  display: block;\n  width: 100px;\n  border-radius: 50%;\n  margin-bottom: 10px;\n`;\nexport const TitleAuthor = styled.h3`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 15px;\n`;\n","const API_KEY = '631075854851454119cb09d20165cf60';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n//? список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n\n//?  пошук фільму за ключовим словом на сторінці фільмів.\n\nexport const fetchMoviesSearch = async search => {\n  try {\n    const response = await fetch(\n      `\n${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${search}`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n\n// ? запит повної інформації про фільм для сторінки кінофільму.\n\nexport const fetchInfoMovies = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n\n// ? запит інформації про акторський склад для сторінки кінофільму.\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await fetch(`\n${BASE_URL}/movie/${movieId}/credits?&api_key=${API_KEY}&language=en-US`);\n    return await response.json();\n  } catch (error) {}\n};\n\n// ? запит оглядів для сторінки кінофільму.\n\nexport const fetchMoviesReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Loader","TextMovies","styled","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovies","fetchMoviesReviews","response","results","console","log","length","map","imgSrc","id","avatar_path","author_details","author","content","match","slice","src","alt","BoxWrapper","ItemReview","ImgAuthor","TitleAuthor","API_KEY","BASE_URL","fetchTrendingMovies","fetch","json","fetchMoviesSearch","search","fetchInfoMovies","fetchMovieCredits","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}